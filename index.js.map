{"version":3,"file":"index.js","mappings":"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","sources":["webpack://ntut-farewell-app-rollup/./src/ts/routes.ts","webpack://ntut-farewell-app-rollup/./src/html/landing.html","webpack://ntut-farewell-app-rollup/./src/html/starting.html","webpack://ntut-farewell-app-rollup/./src/html/message.html","webpack://ntut-farewell-app-rollup/./src/html/ending.html","webpack://ntut-farewell-app-rollup/./src/ts/state.ts","webpack://ntut-farewell-app-rollup/./src/ts/index.ts","webpack://ntut-farewell-app-rollup/./src/ts/Router.ts"],"sourcesContent":["var _a;\nimport messageBoxes from \"../data/message-boxes.json\";\nimport EndingPage from \"../html/ending.html\";\nimport LandingPage from \"../html/landing.html\";\nimport MessagesPage from \"../html/message.html\";\nimport StartingPage from \"../html/starting.html\";\nfunction findMessageBox(name) {\n    return messageBoxes[name];\n}\nexport default {\n    \"\": {\n        html: LandingPage,\n        background: \"index.png\",\n        containerClass: \"index-page\",\n        buttonClickHandler: function (router) {\n            const name = document.getElementById(\"name-input\").value;\n            const passcode = document.getElementById(\"magic-word-input\").value;\n            if (!Object.keys(messageBoxes).includes(name)) {\n                alert(\"名字輸入錯了 QAQ\");\n                return;\n            }\n            if (findMessageBox(name).passcode != passcode) {\n                alert(\"通關密語錯了，偷看壞壞哦！\");\n                return;\n            }\n            // Cache background images\n            for (let i = 1; i <= 4; i++)\n                new Image().src = `img/backgrounds/${name}/${i}.jpg`;\n            new Image().src = `img/backgrounds/ending.jpg`;\n            const backgroundMusic = new Audio(\"/music/background-music.mp3\");\n            backgroundMusic.loop = true;\n            backgroundMusic.play();\n            router.state.name = name;\n            return \"starting\";\n        },\n    },\n    starting: {\n        html: StartingPage,\n        background: \"index.png\",\n        containerClass: \"message-page\",\n        buttonClickHandler: () => \"messages\",\n    },\n    messages: (_a = class {\n            static initialize(router) {\n                const messageBox = findMessageBox(router.state.name);\n                const messageContainerEl = document.getElementById(\"message-container\");\n                messageContainerEl.innerHTML = messageBox.messages\n                    .map(message => `<div class=\"message-content next\">${message\n                    .split(\"\\n\\n\")\n                    .map(paragraph => `<p>${paragraph.replace(/\\n/g, \"<br>\")}</p>`)\n                    .join(\"\")}</div>`)\n                    .join(\"\");\n                const messageContentEls = [...messageContainerEl.children];\n                const maximumHeight = messageContentEls.reduce((previousValue, messageContentEl) => {\n                    messageContentEl.style.height = \"unset\";\n                    const elHeight = messageContentEl.clientHeight;\n                    messageContentEl.style.height = \"\";\n                    if (elHeight > previousValue)\n                        return elHeight;\n                    else\n                        return previousValue;\n                }, 0);\n                messageContainerEl.style.height = `${maximumHeight}px`;\n                this.messageBox = messageBox;\n                this.messageContentEls = messageContentEls;\n                this.router = router;\n                // this.displayNextMessage() requires this.messageContentEls\n                this.displayNextMessage();\n            }\n            static buttonClickHandler() {\n                this.currentMessageIndex++;\n                if (this.currentMessageIndex < this.messageBox.messages.length) {\n                    this.displayNextMessage();\n                    return null;\n                }\n                else {\n                    return \"ending\";\n                }\n            }\n            static displayNextMessage() {\n                const currentMessageContentEl = this.messageContentEls[this.currentMessageIndex];\n                // https://stackoverflow.com/a/31862081\n                const triggerReflow = () => getComputedStyle(currentMessageContentEl).transform;\n                if (this.currentMessageIndex == 0) {\n                    currentMessageContentEl.style.transition = \"none\";\n                    triggerReflow();\n                    currentMessageContentEl.classList.remove(\"next\");\n                    triggerReflow();\n                    currentMessageContentEl.style.transition = \"\";\n                }\n                else {\n                    this.messageContentEls[this.currentMessageIndex - 1].classList.add(\"previous\");\n                    currentMessageContentEl.classList.remove(\"next\");\n                }\n                this.router.setBackground(`${this.router.state.name}/${this.currentMessageIndex + 1}`);\n            }\n        },\n        _a.html = MessagesPage,\n        _a.background = router => `${router.state.name}/1`,\n        _a.containerClass = \"message-page\",\n        _a.currentMessageIndex = 0,\n        _a),\n    ending: {\n        html: EndingPage,\n        background: \"ending\",\n        containerClass: \"message-page\",\n    },\n};\n","// Module\nvar code = \"<div class=\\\"input-container\\\"><label for=\\\"name-input\\\">你的名字</label><input id=\\\"name-input\\\"/></div><div class=\\\"input-container\\\"><label for=\\\"magic-word-input\\\">通關密語</label><input id=\\\"magic-word-input\\\"/></div><img id=\\\"button\\\" src=\\\"img/start-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message-container\\\"><div class=\\\"message-content\\\"><p>哈囉哈嘍！</p><p>歡迎你的加入</p><p>這裡存載著我們送給你的禮物</p><p>準備好進入屬於你的回憶世界了嗎？</p></div></div><img id=\\\"button\\\" src=\\\"img/next-page-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message-container\\\" class=\\\"messages-from-others\\\"></div><img id=\\\"button\\\" src=\\\"img/next-page-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message-container\\\"><div class=\\\"message-content\\\"><p>你在深耕的每一刻<br/>我們永遠記得</p><p>縱使必定悲歡離合<br/>你永遠是我們的大人</p><p>深耕感謝有你</p></div></div>\";\n// Exports\nexport default code;","export default {\n    name: null,\n    authorized: false,\n    containerEl: document.getElementById(\"container\"),\n};\n","import Router from \"./Router\";\nimport routes from \"./routes\";\nimport state from \"./state\";\nnew Router(routes, state);\n","export default class Router {\n    constructor(routes, state) {\n        this.routes = routes;\n        this.state = state;\n        this.push(window.location.pathname.replace(/^\\/*(.*)\\/*$/, \"$1\"));\n    }\n    push(path) {\n        if (this.state.currentPath == path)\n            return;\n        history.pushState({}, \"\", path);\n        this.state.currentPath = path;\n        const newRoute = this.routes[path];\n        this.state.containerEl.className = newRoute.containerClass;\n        this.state.containerEl.innerHTML = newRoute.html;\n        this.setBackground(typeof newRoute.background == \"string\" ? newRoute.background : newRoute.background(this));\n        if (newRoute.initialize != undefined)\n            newRoute.initialize(this);\n        if (newRoute.buttonClickHandler != undefined) {\n            const buttonClickHandler = (\"run\" in newRoute.buttonClickHandler ? newRoute.buttonClickHandler.run : newRoute.buttonClickHandler).bind(newRoute);\n            document.getElementById(\"button\").onclick = () => {\n                const newPath = buttonClickHandler(this);\n                if (newPath != null)\n                    this.push(newPath);\n            };\n        }\n    }\n    setBackground(imagePath) {\n        this.state.containerEl.style.backgroundImage = `url(img/backgrounds/${imagePath.includes(\".\") ? imagePath : imagePath + \".jpg\"})`;\n    }\n}\n"],"names":["_a","findMessageBox","name","html","background","containerClass","buttonClickHandler","router","document","getElementById","value","passcode","Object","keys","includes","alert","i","Image","src","backgroundMusic","Audio","loop","play","state","starting","messages","static","messageBox","messageContainerEl","innerHTML","map","message","split","paragraph","replace","join","messageContentEls","children","maximumHeight","reduce","previousValue","messageContentEl","style","height","elHeight","clientHeight","this","displayNextMessage","currentMessageIndex","length","currentMessageContentEl","triggerReflow","getComputedStyle","transform","transition","classList","remove","add","setBackground","ending","authorized","containerEl","constructor","routes","push","window","location","pathname","path","currentPath","history","pushState","newRoute","className","undefined","initialize","run","bind","onclick","newPath","imagePath","backgroundImage"],"sourceRoot":""}