{"version":3,"file":"index.js","mappings":"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","sources":["webpack://ntut-farewell-app-rollup/./src/ts/routes.ts","webpack://ntut-farewell-app-rollup/./src/html/landing.html","webpack://ntut-farewell-app-rollup/./src/html/starting.html","webpack://ntut-farewell-app-rollup/./src/html/message.html","webpack://ntut-farewell-app-rollup/./src/html/ending.html","webpack://ntut-farewell-app-rollup/./src/ts/state.ts","webpack://ntut-farewell-app-rollup/./src/ts/index.ts","webpack://ntut-farewell-app-rollup/./src/ts/Router.ts"],"sourcesContent":["var _a;\nimport messageBoxes from \"../data/message-boxes.json\";\nimport EndingPage from \"../html/ending.html\";\nimport LandingPage from \"../html/landing.html\";\nimport MessagesPage from \"../html/message.html\";\nimport StartingPage from \"../html/starting.html\";\nfunction findMessageBox(name) {\n    return messageBoxes[name];\n}\nexport default {\n    \"\": {\n        html: LandingPage,\n        background: \"index.png\",\n        containerClass: \"index-page\",\n        buttonClickHandler: function (router) {\n            const name = document.getElementById(\"name-input\").value;\n            const passcode = document.getElementById(\"magic-word-input\").value;\n            if (!Object.keys(messageBoxes).includes(name)) {\n                alert(\"名字輸入錯了 QAQ\");\n                return;\n            }\n            if (findMessageBox(name).passcode != passcode) {\n                alert(\"通關密語錯了，偷看壞壞哦！\");\n                return;\n            }\n            // Cache background images\n            for (let i = 1; i <= 4; i++)\n                new Image().src = `img/backgrounds/${name}/${i}.jpg`;\n            new Image().src = `img/backgrounds/ending.jpg`;\n            const backgroundMusic = new Audio(\"/music/background-music.mp3\");\n            backgroundMusic.loop = true;\n            backgroundMusic.play();\n            router.state.name = name;\n            return \"starting\";\n        },\n    },\n    starting: {\n        html: StartingPage,\n        background: \"index.png\",\n        containerClass: \"message-page\",\n        buttonClickHandler: () => \"messages\",\n    },\n    messages: (_a = class {\n            constructor(router) {\n                this.currentMessageIndex = 0;\n                const messageBox = findMessageBox(router.state.name);\n                const messageContainerEl = document.getElementById(\"message-container\");\n                messageContainerEl.innerHTML = messageBox.messages\n                    .map(message => `<div class=\"message-content next\">${message\n                    .split(\"\\n\\n\")\n                    .map(paragraph => `<p>${paragraph.replace(/\\n/g, \"<br>\")}</p>`)\n                    .join(\"\")}</div>`)\n                    .join(\"\");\n                const messageContentEls = [...messageContainerEl.children];\n                const maximumHeight = messageContentEls.reduce((previousValue, messageContentEl) => {\n                    messageContentEl.style.height = \"unset\";\n                    const elHeight = messageContentEl.clientHeight;\n                    messageContentEl.style.height = \"\";\n                    if (elHeight > previousValue)\n                        return elHeight;\n                    else\n                        return previousValue;\n                }, 0);\n                messageContainerEl.style.height = `${maximumHeight}px`;\n                this.messageBox = messageBox;\n                this.messageContentEls = messageContentEls;\n                this.router = router;\n                // this.displayNextMessage() requires this.messageContentEls\n                this.displayNextMessage();\n            }\n            displayNextMessage() {\n                const currentMessageContentEl = this.messageContentEls[this.currentMessageIndex];\n                // https://stackoverflow.com/a/31862081\n                const triggerReflow = () => getComputedStyle(currentMessageContentEl).transform;\n                if (this.currentMessageIndex == 0) {\n                    currentMessageContentEl.style.transition = \"none\";\n                    triggerReflow();\n                    currentMessageContentEl.classList.remove(\"next\");\n                    triggerReflow();\n                    currentMessageContentEl.style.transition = \"\";\n                }\n                else {\n                    this.messageContentEls[this.currentMessageIndex - 1].classList.add(\"previous\");\n                    currentMessageContentEl.classList.remove(\"next\");\n                }\n                this.router.setBackground(`${this.router.state.name}/${this.currentMessageIndex + 1}`);\n            }\n            buttonClickHandler() {\n                this.currentMessageIndex++;\n                if (this.currentMessageIndex < this.messageBox.messages.length) {\n                    this.displayNextMessage();\n                    return null;\n                }\n                else {\n                    return \"ending\";\n                }\n            }\n        },\n        _a.html = MessagesPage,\n        _a.background = (router) => `${router.state.name}/1`,\n        _a.containerClass = \"message-page\",\n        _a),\n    ending: {\n        html: EndingPage,\n        background: \"ending\",\n        containerClass: \"message-page\",\n    },\n};\n","// Module\nvar code = \"<div class=\\\"input-container\\\"><label for=\\\"name-input\\\">你的名字</label><input id=\\\"name-input\\\"/></div><div class=\\\"input-container\\\"><label for=\\\"magic-word-input\\\">通關密語</label><input id=\\\"magic-word-input\\\"/></div><img id=\\\"button\\\" src=\\\"img/start-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message-container\\\"><div class=\\\"message-content\\\"><p>哈囉哈嘍！</p><p>歡迎你的加入</p><p>這裡存載著我們送給你的禮物</p><p>準備好進入屬於你的回憶世界了嗎？</p></div></div><img id=\\\"button\\\" src=\\\"img/next-page-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message-container\\\" class=\\\"messages-from-others\\\"></div><img id=\\\"button\\\" src=\\\"img/next-page-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message-container\\\"><div class=\\\"message-content\\\"><p>你在深耕的每一刻<br/>我們永遠記得</p><p>縱使必定悲歡離合<br/>你永遠是我們的大人</p><p>深耕感謝有你</p></div></div>\";\n// Exports\nexport default code;","export default {\n    name: null,\n    authorized: false,\n    containerEl: document.getElementById(\"container\"),\n};\n","import Router from \"./Router\";\nimport routes from \"./routes\";\nimport state from \"./state\";\nnew Router(routes, state);\n","export default class Router {\n    constructor(routes, state) {\n        this.routes = routes;\n        this.state = state;\n        this.push(window.location.pathname.replace(/^\\/*(.*)\\/*$/, \"$1\"));\n    }\n    push(path) {\n        if (this.state.currentPath == path)\n            return;\n        history.pushState({}, \"\", path);\n        this.state.currentPath = path;\n        const newRoute = this.routes[path];\n        this.state.containerEl.className = newRoute.containerClass;\n        this.state.containerEl.innerHTML = newRoute.html;\n        this.setBackground(typeof newRoute.background == \"string\" ? newRoute.background : newRoute.background(this));\n        const buttonClickHandler = this.getButtonClickHandler(newRoute);\n        if (buttonClickHandler != undefined) {\n            document.getElementById(\"button\").onclick = () => {\n                const newPath = buttonClickHandler(this);\n                if (newPath != null)\n                    this.push(newPath);\n            };\n        }\n    }\n    setBackground(imagePath) {\n        this.state.containerEl.style.backgroundImage = `url(img/backgrounds/${imagePath.includes(\".\") ? imagePath : imagePath + \".jpg\"})`;\n    }\n    getButtonClickHandler(route) {\n        if (Object.getOwnPropertyDescriptor(route, \"prototype\") != undefined) {\n            const routeInstance = new route(this);\n            return routeInstance.buttonClickHandler.bind(routeInstance);\n        }\n        else {\n            return route.buttonClickHandler;\n        }\n    }\n}\n"],"names":["_a","findMessageBox","name","html","background","containerClass","buttonClickHandler","router","document","getElementById","value","passcode","Object","keys","includes","alert","i","Image","src","backgroundMusic","Audio","loop","play","state","starting","messages","constructor","this","currentMessageIndex","messageBox","messageContainerEl","innerHTML","map","message","split","paragraph","replace","join","messageContentEls","children","maximumHeight","reduce","previousValue","messageContentEl","style","height","elHeight","clientHeight","displayNextMessage","currentMessageContentEl","triggerReflow","getComputedStyle","transform","transition","classList","remove","add","setBackground","length","ending","authorized","containerEl","routes","push","window","location","pathname","path","currentPath","history","pushState","newRoute","className","getButtonClickHandler","undefined","onclick","newPath","imagePath","backgroundImage","route","getOwnPropertyDescriptor","routeInstance","bind"],"sourceRoot":""}