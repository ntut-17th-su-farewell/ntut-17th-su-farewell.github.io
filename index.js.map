{"version":3,"file":"index.js","mappings":"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","sources":["webpack://ntut-farewell-app-rollup/./src/ts/routes.ts","webpack://ntut-farewell-app-rollup/./src/html/landing.html","webpack://ntut-farewell-app-rollup/./src/html/starting.html","webpack://ntut-farewell-app-rollup/./src/html/message.html","webpack://ntut-farewell-app-rollup/./src/html/ending.html","webpack://ntut-farewell-app-rollup/./src/ts/state.ts","webpack://ntut-farewell-app-rollup/./src/ts/index.ts","webpack://ntut-farewell-app-rollup/./src/ts/Router.ts"],"sourcesContent":["import messageBoxes from \"../data/message-boxes.json\";\nimport EndingPage from \"../html/ending.html\";\nimport LandingPage from \"../html/landing.html\";\nimport MessagesPage from \"../html/message.html\";\nimport StartingPage from \"../html/starting.html\";\nfunction findMessageBox(name) {\n    return messageBoxes[name];\n}\nexport default {\n    \"\": {\n        html: LandingPage,\n        background: \"index.png\",\n        containerClass: \"index-page\",\n        buttonClickHandler: function (router) {\n            const name = document.getElementById(\"name-input\").value;\n            const passcode = document.getElementById(\"magic-word-input\").value;\n            if (!Object.keys(messageBoxes).includes(name)) {\n                alert(\"名字輸入錯了 QAQ\");\n                return;\n            }\n            if (findMessageBox(name).passcode != passcode) {\n                alert(\"通關密語錯了，偷看壞壞哦！\");\n                return;\n            }\n            router.state.name = name;\n            return \"starting\";\n        },\n    },\n    starting: {\n        html: StartingPage,\n        background: \"index.png\",\n        containerClass: \"message-page\",\n        buttonClickHandler: () => \"messages\",\n    },\n    messages: {\n        html: MessagesPage,\n        background: router => `${router.state.name}/1`,\n        containerClass: \"message-page\",\n        buttonClickHandler: class {\n            constructor(router) {\n                this.currentMessageIndex = 0;\n                const messageBox = findMessageBox(router.state.name);\n                const messageEl = document.getElementById(\"message\");\n                messageEl.innerHTML = messageBox.messages\n                    .map(message => `<div class=\"message-content\">${message\n                    .split(\"\\n\\n\")\n                    .map(paragraph => `<p>${paragraph.replace(/\\n/g, \"<br>\")}</p>`)\n                    .join(\"\")}</div>`)\n                    .join(\"\");\n                const messageContentEls = messageEl.children;\n                for (const children of messageContentEls)\n                    children.classList.add(\"next\");\n                this.messageBox = messageBox;\n                this.messageContentEls = messageContentEls;\n                this.router = router;\n                // this.displayNextMessage() requires this.messageContentEls\n                this.displayNextMessage();\n            }\n            displayNextMessage() {\n                if (this.currentMessageIndex > 0)\n                    this.messageContentEls[this.currentMessageIndex - 1].classList.add(\"previous\");\n                this.messageContentEls[this.currentMessageIndex].classList.remove(\"next\");\n                this.router.setBackground(`${this.router.state.name}/${this.currentMessageIndex + 1}`);\n            }\n            run() {\n                this.currentMessageIndex++;\n                if (this.currentMessageIndex < this.messageBox.messages.length) {\n                    this.displayNextMessage();\n                    return null;\n                }\n                else {\n                    return \"ending\";\n                }\n            }\n        },\n    },\n    ending: {\n        html: EndingPage,\n        background: \"ending\",\n        containerClass: \"message-page\",\n    },\n};\n[];\n","// Module\nvar code = \"<div class=\\\"input-container\\\"><label for=\\\"name-input\\\">你的名字</label><input id=\\\"name-input\\\"/></div><div class=\\\"input-container\\\"><label for=\\\"magic-word-input\\\">通關密語</label><input id=\\\"magic-word-input\\\"/></div><img id=\\\"button\\\" src=\\\"img/start-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message\\\"><div class=\\\"message-content\\\"><p>哈囉哈嘍！</p><p>歡迎你的加入</p><p>這裡存載著我們送給你的禮物</p><p>準備好進入屬於你的回憶世界了嗎？</p></div></div><img id=\\\"button\\\" src=\\\"img/next-page-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message\\\"></div><img id=\\\"button\\\" src=\\\"img/next-page-button.png\\\"/>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"message\\\"><div class=\\\"message-content\\\"><p>你在深耕的每一刻<br>我們永遠記得</p><p>縱使必定悲歡離合<br>你永遠是我們的大人</p><p>深耕感謝有你</p></div></div>\";\n// Exports\nexport default code;","export default {\n    name: null,\n    authorized: false,\n    containerEl: document.getElementById(\"container\"),\n};\n","import Router from \"./Router\";\nimport routes from \"./routes\";\nimport state from \"./state\";\nnew Router(routes, state);\n","export default class Router {\n    constructor(routes, state) {\n        this.routes = routes;\n        this.state = state;\n        this.push(window.location.pathname.replace(/^\\/*(.*)\\/*$/, \"$1\"));\n    }\n    push(path) {\n        if (this.state.currentPath == path)\n            return;\n        history.pushState({}, \"\", path);\n        this.state.currentPath = path;\n        const newRoute = this.routes[path];\n        console.log(newRoute);\n        this.state.containerEl.className = newRoute.containerClass;\n        this.state.containerEl.innerHTML = newRoute.html;\n        this.setBackground(typeof newRoute.background == \"string\" ? newRoute.background : newRoute.background(this));\n        if (newRoute.buttonClickHandler != undefined) {\n            const buttonClickHandler = this.getButtonClickHandler(newRoute.buttonClickHandler);\n            document.getElementById(\"button\").onclick = () => {\n                const newPath = buttonClickHandler(this);\n                if (newPath != null)\n                    this.push(newPath);\n            };\n        }\n    }\n    setBackground(imagePath) {\n        this.state.containerEl.style.backgroundImage = `url(img/backgrounds/${imagePath.includes(\".\") ? imagePath : imagePath + \".jpg\"})`;\n    }\n    getButtonClickHandler(handler) {\n        const handlerPrototype = Object.getOwnPropertyDescriptor(handler, \"prototype\");\n        // handlerPrototype == undefined if it is an arrow function\n        if (handlerPrototype != undefined && handlerPrototype.writable == false) {\n            const handlerInstance = new handler(this);\n            return handlerInstance.run.bind(handlerInstance);\n        }\n        else {\n            return handler;\n        }\n    }\n}\n"],"names":["findMessageBox","name","html","background","containerClass","buttonClickHandler","router","document","getElementById","value","passcode","Object","keys","includes","state","alert","starting","messages","constructor","this","currentMessageIndex","messageBox","messageEl","innerHTML","map","message","split","paragraph","replace","join","messageContentEls","children","classList","add","displayNextMessage","remove","setBackground","run","length","ending","authorized","containerEl","routes","push","window","location","pathname","path","currentPath","history","pushState","newRoute","console","log","className","undefined","getButtonClickHandler","onclick","newPath","imagePath","style","backgroundImage","handler","handlerPrototype","getOwnPropertyDescriptor","writable","handlerInstance","bind"],"sourceRoot":""}